CodeBehindForm
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
'---------------------------------------------------------------------------------------
'          __    _____   ______       ___       _____ ____    __
'         / /   /  _/ | / / __ \     |__ \     / ___// __ \  / /
'        / /    / //  |/ / / / /     __/ /     \__ \/ / / / / /
'       / /____/ // /|  / /_/ /     / __/     ___/ / /_/ / / /___
' _____/_____/___/_/ |_/\___\_\____/____/____/____/\___\_\/_____/
'/_____/                     /_____/   /_____/
'
' (c) Tim Getsch
' @author timgetsch@commitcs.com
' @license MIT (http://www.opensource.org/licenses/mit-license.php)
'---------------------------------------------------------------------------------------
Option Compare Database
Option Explicit

Private Sub cmdCheckForUpdates_Click()
10        On Error GoTo PROC_ERROR

20        FollowHyperlink LINQ_SOURCE_URL

PROC_EXIT:
30        Exit Sub

PROC_ERROR:
40        LogError "Form_USys_LinqRemoteConnections", "cmdCheckForUpdates_Click", Erl, Err.Number, Err.Description
50        Resume PROC_EXIT
60        Resume
End Sub

Private Sub cmdCreateLinkedTable_Click()
10        On Error GoTo PROC_ERROR

20        If Not SaveRecordIfNecessary Then Exit Sub
          
          Dim strTableName As String
30        strTableName = InputBox("Enter the source table name", "_LINQ Create Linked Table")
40        If strTableName <> "" Then
              Dim strNewTableName As String
50            strNewTableName = CreateLinkedTable(Me.ID, strTableName)
60            If strNewTableName <> "" Then
70                MsgBox "Created " & strNewTableName
80            Else
90                MsgBox "Failed to create linked table " & strTableName, vbExclamation
100           End If
110       End If

PROC_EXIT:
120       Exit Sub

PROC_ERROR:
130       LogError "Form__LinqRemoteConnections", "cmdCreateLinkedTable_Click", Erl, Err.Number, Err.Description
140       Resume PROC_EXIT
150       Resume
End Sub
          
Public Function SaveRecordIfNecessary() As Boolean
10        On Error GoTo PROC_ERROR

20        If CanSaveRecord Then
30            If Me.Dirty Then Me.Dirty = False
40            SaveRecordIfNecessary = True
50        End If

PROC_EXIT:
60        Exit Function

PROC_ERROR:
70        LogError "Form_USys_LinqRemoteConnections", "SaveRecordIfNecessary", Erl, Err.Number, Err.Description
80        Resume PROC_EXIT
90        Resume
End Function
          
Private Function CanSaveRecord() As Boolean
10        On Error GoTo PROC_ERROR

20        If IsNull(Me.Description) Then
30            MsgBox "The Description is required."
40            Me.Description.SetFocus
50            Exit Function
60        End If
          
70        If IsNull(Me.CodeClassName) Then
80            MsgBox "The CodeClassName is required."
90            Me.CodeClassName.SetFocus
100           Exit Function
110       End If
              
120       If IsNull(Me.SqlServerDriver) Then
130           MsgBox "The SqlServerDriver is required."
140           Me.SqlServerDriver.SetFocus
150           Exit Function
160       End If

170       If IsNull(Me.Database) Then
180           MsgBox "The Database is required."
190           Me.Database.SetFocus
200           Exit Function
210       End If
          
220       ID_AssignIfNecessary
          
230       CanSaveRecord = True
          
PROC_EXIT:
240       Exit Function

PROC_ERROR:
250       LogError "Form_USys_LinqRemoteConnections", "CanSaveRecord", Erl, Err.Number, Err.Description
260       Resume PROC_EXIT
270       Resume
End Function

Private Sub cmdGenerateCode_Click()
10        On Error GoTo PROC_ERROR
          
20        If Not SaveRecordIfNecessary Then Exit Sub

30        Init_NullableDataTypes
40        Init_BaseModules Me.CodeClassName
          
50        If AutoGenerateDatabaseClass(Me.ID) Then
60            AutoGenerateDBC
70            MsgBox "You can now run commands like dbc." & GetCodeClassPropertyName(Me.CodeClassName) & "..."
80            DoCmd.RunCommand acCmdVisualBasicEditor
90        End If

PROC_EXIT:
100       Exit Sub

PROC_ERROR:
110       LogError "Form__LinqRemoteConnections", "cmdGenerateCode_Click", Erl, Err.Number, Err.Description
120       Resume PROC_EXIT
130       Resume
End Sub

Private Sub cmdRelinkTable_Click()
10        On Error GoTo PROC_ERROR

20        If Not SaveRecordIfNecessary Then Exit Sub
          
          Dim strTableName As String
30        strTableName = InputBox("What table do you want to relink?", "_LINQ Relinked Table", Me.LinkedTablePrefix)
          
40        If strTableName <> "" Then
50            If Not IsObjectInCol(CurrentData.AllTables, strTableName) Then
60                MsgBox strTableName & " not found"
70            ElseIf RelinkTable(strTableName) Then
80                MsgBox "Relinked " & strTableName
90            Else
100               MsgBox "Failed to relink table " & strTableName, vbExclamation
110           End If
120       End If

PROC_EXIT:
130       Exit Sub

PROC_ERROR:
140       LogError "Form__LinqRemoteConnections", "cmdRelinkTable_Click", Erl, Err.Number, Err.Description
150       Resume PROC_EXIT
160       Resume
End Sub

Private Sub ID_AssignIfNecessary()
10        On Error GoTo PROC_ERROR

20        If IsNull(Me.ID) Then
30            Me.ID = Nz(DMax("ID", LINQ_REMOTE_CONNECTIONS), 0) + 1
40        End If
          
PROC_EXIT:
50        Exit Sub

PROC_ERROR:
60        LogError "Form_USys_LinqRemoteConnections", "ID_Assign", Erl, Err.Number, Err.Description
70        Resume PROC_EXIT
80        Resume
End Sub

Private Sub Description_BeforeUpdate(Cancel As Integer)
10        On Error GoTo PROC_ERROR

20        If IsNull(Me.CodeClassName) Then
30            Me.CodeClassName = CreateClassName(Me.Description.Text)
40        End If
          
50        ID_AssignIfNecessary

PROC_EXIT:
60        Exit Sub

PROC_ERROR:
70        LogError "Form_USys_LinqRemoteConnections", "Description_BeforeUpdate", Erl, Err.Number, Err.Description
80        Resume PROC_EXIT
90        Resume
End Sub

Private Function CreateClassName(strDescription As String) As String
10        On Error GoTo PROC_ERROR

          Dim strClassName As String
20        strClassName = "cls_LINQ_2_SQL_" & strDescription
30        ReplaceIfNecessary strClassName, " ", ""
40        ReplaceIfNecessary strClassName, ".", ""
50        ReplaceIfNecessary strClassName, "!", ""
60        ReplaceIfNecessary strClassName, "?", ""
70        ReplaceIfNecessary strClassName, "'", ""
80        ReplaceIfNecessary strClassName, """", ""
90        CreateClassName = strClassName

PROC_EXIT:
100       Exit Function

PROC_ERROR:
110       LogError "Form_USys_LinqRemoteConnections", "CreateClassName", Erl, Err.Number, Err.Description
120       Resume PROC_EXIT
130       Resume
End Function

Private Sub Form_BeforeUpdate(Cancel As Integer)
10        On Error GoTo PROC_ERROR

20        Cancel = Not CanSaveRecord

PROC_EXIT:
30        Exit Sub

PROC_ERROR:
40        LogError "Form_USys_LinqRemoteConnections", "Form_BeforeUpdate", Erl, Err.Number, Err.Description
50        Resume PROC_EXIT
60        Resume
End Sub

Private Sub Form_Open(Cancel As Integer)
10        On Error GoTo PROC_ERROR

20        Me.Caption = "_LINQ_2_SQL Add-In v" & TOOL_VERSION
          
30        If Not IsObjectInCol(CurrentData.AllTables, LINQ_REMOTE_CONNECTIONS) Then
40            DoCmd.CopyObject CurrentDb.Name, LINQ_REMOTE_CONNECTIONS, acTable, LINQ_REMOTE_CONNECTIONS
50        End If
          
          Dim dbSource As DAO.Database
60        Set dbSource = CodeDb
          
          Dim dbDest As DAO.Database
70        Set dbDest = CurrentDb
          
          Dim tdfSource As DAO.TableDef
80        Set tdfSource = dbSource.TableDefs(LINQ_REMOTE_CONNECTIONS)
          
          Dim rs As DAO.Recordset
90        Set rs = dbDest.OpenRecordset(LINQ_REMOTE_CONNECTIONS, dbOpenDynaset)
          
          ' Make sure the schema is in sync
          Dim fldSource As DAO.Field
100       For Each fldSource In tdfSource.Fields
110           If Not IsObjectInCol(rs.Fields, fldSource.Name) Then
120               rs.Close
130               Set rs = Nothing
                  
                  Dim tdfDest As TableDef
140               Set tdfDest = dbDest.TableDefs(LINQ_REMOTE_CONNECTIONS)
                  
                  ' Add the field and set the default
                  Dim fldNew As DAO.Field
150               Set fldNew = tdfDest.CreateField(fldSource.Name, fldSource.Type, fldSource.Size)
160               fldNew.DefaultValue = fldSource.DefaultValue
                  
170               tdfDest.Fields.Append fldNew
                  
180               If fldSource.Required Then ' Set all the existing fields before making it required
190                   Set rs = dbDest.OpenRecordset(LINQ_REMOTE_CONNECTIONS, dbOpenDynaset)
200                   While Not rs.EOF
210                       rs.Edit
220                       rs.Fields(fldSource.Name) = Eval(fldSource.DefaultValue)
230                       rs.Update
240                       rs.MoveNext
250                   Wend
260                   rs.Close
270                   Set rs = Nothing
280                   tdfDest.Fields(fldSource.Name).Required = True
290               End If
              
300               Set rs = dbDest.OpenRecordset(LINQ_REMOTE_CONNECTIONS, dbOpenDynaset)
310           End If
320       Next
                      
330       Set Me.Recordset = rs
          
PROC_EXIT:
340       Set dbDest = Nothing
350       Set dbSource = Nothing
360       Exit Sub

PROC_ERROR:
370       LogError "Form__LinqRemoteConnections", "Form_Open", Erl, Err.Number, Err.Description
380       Resume PROC_EXIT
390       Resume
End Sub

Private Sub Password_BeforeUpdate(Cancel As Integer)
10        On Error GoTo PROC_ERROR

20        If Not IsNull(Password) Then
30            If vbYes <> MsgBox("This password will be stored in plain text in a hidden user system table.  It is recommended that you use Windows Authentication instead.  Do you want to save the password anyhow?", vbYesNo + vbDefaultButton2) Then
40                Cancel = True
50            End If
60        End If

PROC_EXIT:
70        Exit Sub

PROC_ERROR:
80        LogError "Form_USys_LinqRemoteConnections", "Password_BeforeUpdate", Erl, Err.Number, Err.Description
90        Resume PROC_EXIT
100       Resume
End Sub
